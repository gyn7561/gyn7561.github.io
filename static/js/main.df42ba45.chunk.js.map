{"version":3,"sources":["hangul.js","kana.js","CharCard.js","App.js","serviceWorker.js","index.js"],"names":["Aromanize","require","all","i","push","String","fromCharCode","allChar","romanize","char","kana","forEach","c","length","element","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","padding","spacing","fontSize","props","charSet","classes","React","useState","randomChar","setChar","input","setInput","showLatin","setShowLatin","index","parseInt","Math","random","hangul","onInput","e","value","target","Card","CardContent","Typography","align","className","FormControl","fullWidth","margin","variant","InputLabel","htmlFor","OutlinedInput","id","onChange","labelWidth","placeholder","CardActions","Button","color","onClick","App","setCharSet","CharCard","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.df42ba45.chunk.js","sourcesContent":["\r\nvar Aromanize = require(\"aromanize\");\r\n\r\nlet all = [];\r\nfor (var i = 0; i < 11172; i++) {\r\n    all.push(String.fromCharCode(i + 44032));\r\n}\r\nfunction romanize(char) {\r\n    return Aromanize.romanize(char);\r\n}\r\nexport default { allChar: all, romanize };","\r\nvar kana = [\r\n    [\"tsu\", \"つ\"],\r\n    [\"TSU\", \"ツ\"],\r\n    [\"dji\", \"ぢ\"], [\"dzu\", \"づ\"],\r\n    [\"DJI\", \"ヂ\"], [\"DZU\", \"ヅ\"],\r\n    [\"kya\", \"きゃ\"], [\"kyu\", \"きゅ\"], [\"kyo\", \"きょ\"],\r\n    [\"sha\", \"しゃ\"], [\"shu\", \"しゅ\"], [\"sho\", \"しょ\"],\r\n    [\"cha\", \"ちゃ\"], [\"chu\", \"ちゅ\"], [\"cho\", \"ちょ\"],\r\n    [\"nya\", \"にゃ\"], [\"nyu\", \"にゅ\"], [\"nyo\", \"にょ\"],\r\n    [\"hya\", \"ひゃ\"], [\"hyu\", \"ひゅ\"], [\"hyo\", \"ひょ\"],\r\n    [\"mya\", \"みゃ\"], [\"myu\", \"みゅ\"], [\"myo\", \"みょ\"],\r\n    [\"rya\", \"りゃ\"], [\"ryu\", \"りゅ\"], [\"ryo\", \"りょ\"],\r\n    [\"gya\", \"ぎゃ\"], [\"gyu\", \"ぎゅ\"], [\"gyo\", \"ぎょ\"],\r\n    [\"jya\", \"じゃ\"], [\"jyu\", \"じゅ\"], [\"jyo\", \"じょ\"],\r\n    [\"dya\", \"ぢゃ\"], [\"dyu\", \"ぢゅ\"], [\"dyo\", \"ぢょ\"],\r\n    [\"bya\", \"びゃ\"], [\"byu\", \"びゅ\"], [\"byo\", \"びょ\"],\r\n    [\"pya\", \"ぴゃ\"], [\"pyu\", \"ぴゅ\"], [\"pyo\", \"ぴょ\"],\r\n    [\"KYA\", \"キャ\"], [\"KYU\", \"キュ\"], [\"KYO\", \"キョ\"],\r\n    [\"SHA\", \"シャ\"], [\"SHU\", \"シュ\"], [\"SHO\", \"ショ\"],\r\n    [\"CHA\", \"チャ\"], [\"CHU\", \"チュ\"], [\"CHO\", \"チョ\"],\r\n    [\"NYA\", \"ニャ\"], [\"NYU\", \"ニュ\"], [\"NYO\", \"ニョ\"],\r\n    [\"HYA\", \"ヒャ\"], [\"HYU\", \"ヒュ\"], [\"HYO\", \"ヒョ\"],\r\n    [\"MYA\", \"ミャ\"], [\"MYU\", \"ミュ\"], [\"MYO\", \"ミョ\"],\r\n    [\"RYA\", \"リャ\"], [\"RYU\", \"リュ\"], [\"RYO\", \"リョ\"],\r\n    [\"GYA\", \"ギャ\"], [\"GYU\", \"ギュ\"], [\"GYO\", \"ギョ\"],\r\n    [\"JYA\", \"ジャ\"], [\"JYU\", \"ジュ\"], [\"JYO\", \"ジョ\"],\r\n    [\"DYA\", \"ヂャ\"], [\"DYU\", \"ヂュ\"], [\"DYO\", \"ヂョ\"],\r\n    [\"BYA\", \"ビャ\"], [\"BYU\", \"ビュ\"], [\"BYO\", \"ビョ\"],\r\n    [\"PYA\", \"ピャ\"], [\"PYU\", \"ピュ\"], [\"PYO\", \"ピョ\"],\r\n    [\"ka\", \"か\"], [\"ki\", \"き\"], [\"ku\", \"く\"], [\"ke\", \"け\"], [\"ko\", \"こ\"],\r\n    [\"sa\", \"さ\"], [\"shi\", \"し\"], [\"su\", \"す\"], [\"se\", \"せ\"], [\"so\", \"そ\"],\r\n    [\"ta\", \"た\"], [\"chi\", \"ち\"], [\"te\", \"て\"], [\"to\", \"と\"],\r\n    [\"na\", \"な\"], [\"ni\", \"に\"], [\"nu\", \"ぬ\"], [\"ne\", \"ね\"], [\"no\", \"の\"],\r\n    [\"ha\", \"は\"], [\"hi\", \"ひ\"], [\"fu\", \"ふ\"], [\"he\", \"へ\"], [\"ho\", \"ほ\"],\r\n    [\"ma\", \"ま\"], [\"mi\", \"み\"], [\"mu\", \"む\"], [\"me\", \"め\"], [\"mo\", \"も\"],\r\n    [\"ra\", \"ら\"], [\"ri\", \"り\"], [\"ru\", \"る\"], [\"re\", \"れ\"], [\"ro\", \"ろ\"],\r\n    [\"ya\", \"や\"], [\"yu\", \"ゆ\"], [\"yo\", \"よ\"],\r\n    [\"wa\", \"わ\"], [\"wo\", \"を\"],\r\n    [\"nn\", \"ん\"],\r\n    [\"ga\", \"が\"], [\"gi\", \"ぎ\"], [\"gu\", \"ぐ\"], [\"ge\", \"げ\"], [\"go\", \"ご\"],\r\n    [\"za\", \"ざ\"], [\"ji\", \"じ\"], [\"zu\", \"ず\"], [\"ze\", \"ぜ\"], [\"zo\", \"ぞ\"],\r\n    [\"da\", \"だ\"], [\"de\", \"で\"], [\"do\", \"ど\"],\r\n    [\"pa\", \"ぱ\"], [\"pi\", \"ぴ\"], [\"pu\", \"ぷ\"], [\"pe\", \"ぺ\"], [\"po\", \"ぽ\"],\r\n    [\"ba\", \"ば\"], [\"bi\", \"び\"], [\"bu\", \"ぶ\"], [\"be\", \"べ\"], [\"bo\", \"ぼ\"],\r\n    [\"KA\", \"カ\"], [\"KI\", \"キ\"], [\"KU\", \"ク\"], [\"KE\", \"ケ\"], [\"KO\", \"コ\"],\r\n    [\"SA\", \"サ\"], [\"SHI\", \"シ\"], [\"SU\", \"ス\"], [\"SE\", \"セ\"], [\"SO\", \"ソ\"],\r\n    [\"TA\", \"タ\"], [\"CHI\", \"チ\"], [\"TE\", \"テ\"], [\"TO\", \"ト\"],\r\n    [\"NA\", \"ナ\"], [\"NI\", \"ニ\"], [\"NU\", \"ヌ\"], [\"NE\", \"ネ\"], [\"NO\", \"ノ\"],\r\n    [\"HA\", \"ハ\"], [\"HI\", \"ヒ\"], [\"FU\", \"フ\"], [\"HE\", \"ヘ\"], [\"HO\", \"ホ\"],\r\n    [\"MA\", \"マ\"], [\"MI\", \"ミ\"], [\"MU\", \"ム\"], [\"ME\", \"メ\"], [\"MO\", \"モ\"],\r\n    [\"RA\", \"ラ\"], [\"RI\", \"リ\"], [\"RU\", \"ル\"], [\"RE\", \"レ\"], [\"RO\", \"ロ\"],\r\n    [\"YA\", \"ヤ\"], [\"YU\", \"ユ\"], [\"YO\", \"ヨ\"],\r\n    [\"WA\", \"ワ\"], [\"WO\", \"ヲ\"],\r\n    [\"NN\", \"ン\"],\r\n    [\"GA\", \"ガ\"], [\"GI\", \"ギ\"], [\"GU\", \"グ\"], [\"GE\", \"ゲ\"], [\"GO\", \"ゴ\"],\r\n    [\"ZA\", \"ザ\"], [\"JI\", \"ジ\"], [\"ZU\", \"ズ\"], [\"ZE\", \"ゼ\"], [\"ZO\", \"ゾ\"],\r\n    [\"DA\", \"ダ\"], [\"DE\", \"デ\"], [\"DO\", \"ド\"],\r\n    [\"PA\", \"パ\"], [\"PI\", \"ピ\"], [\"PU\", \"プ\"], [\"PE\", \"ペ\"], [\"PO\", \"ポ\"],\r\n    [\"BA\", \"バ\"], [\"BI\", \"ビ\"], [\"BU\", \"ブ\"], [\"BE\", \"ベ\"], [\"BO\", \"ボ\"],\r\n    [\"kk\", \"っ\"], [\"ss\", \"っ\"], [\"tt\", \"っ\"], [\"pp\", \"っ\"],\r\n    [\"KK\", \"ッ\"], [\"SS\", \"ッ\"], [\"TT\", \"ッ\"], [\"PP\", \"ッ\"],\r\n    [\"a\", \"あ\"], [\"i\", \"い\"], [\"u\", \"う\"], [\"e\", \"え\"], [\"o\", \"お\"],\r\n    [\"A\", \"ア\"], [\"I\", \"イ\"], [\"U\", \"ウ\"], [\"E\", \"エ\"], [\"O\", \"オ\"]\r\n];\r\n\r\n\r\nlet allChar = [];\r\n\r\nkana.forEach(c => {\r\n    allChar.push(c[1]);\r\n});\r\n\r\nfunction romanize(char) {\r\n    for (let i = 0; i < kana.length; i++) {\r\n        const element = kana[i];\r\n        if (element[1] === char) {\r\n            return element[0];\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport default { allChar, romanize };","import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Card from '@material-ui/core/Card';\r\nimport CardActions from '@material-ui/core/CardActions';\r\nimport CardContent from '@material-ui/core/CardContent';\r\nimport Button from '@material-ui/core/Button';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { FormControl, InputLabel, OutlinedInput } from \"@material-ui/core\";\r\n\r\nimport hangul from \"./hangul\";\r\nimport kana from \"./kana\";\r\n\r\n\r\nconst useStyles = makeStyles(theme => ({\r\n    root: {\r\n        backgroundColor: theme.palette.background.paper,\r\n        padding: theme.spacing(1),\r\n        fontSize: 70\r\n    },\r\n}));\r\n\r\n\r\nexport default function (props) {\r\n    let { charSet } = props;\r\n    const classes = useStyles();\r\n    const [char, setChar] = React.useState(randomChar());\r\n    const [input, setInput] = React.useState(\"\");\r\n    const [showLatin, setShowLatin] = React.useState(false);\r\n\r\n    function randomChar() {\r\n        if (charSet === \"hangul\") {\r\n            let index = parseInt(Math.random() * hangul.allChar.length);\r\n            return hangul.allChar[index];\r\n        } else if (charSet == \"kana\") {\r\n            let index = parseInt(Math.random() * kana.allChar.length);\r\n            return kana.allChar[index];\r\n        }\r\n    }\r\n\r\n\r\n    function romanize(char) {\r\n        if (charSet == \"hangul\") {\r\n            return hangul.romanize(char);\r\n        } else if (charSet == \"kana\") {\r\n            return kana.romanize(char);\r\n        }\r\n    }\r\n\r\n    function init() {\r\n        setInput(\"\");\r\n        setChar(randomChar());\r\n        setShowLatin(false);\r\n    }\r\n\r\n    function onInput(e) {\r\n        let value = e.target.value;\r\n        setInput(value);\r\n        if (romanize(char) === value) {\r\n            init();\r\n        }\r\n    }\r\n\r\n    return <Card>\r\n        <CardContent>\r\n            <Typography align=\"center\" className={classes.root}>\r\n                {char}\r\n                {showLatin && <span>-{romanize(char)}\r\n                </span>}\r\n                {/*- {Aromanize.romanize(char)} */}\r\n            </Typography>\r\n            <FormControl fullWidth className={classes.margin} variant=\"outlined\">\r\n                <InputLabel htmlFor=\"outlined-adornment-amount\">输入发音</InputLabel>\r\n                <OutlinedInput\r\n                    id=\"outlined-adornment-amount\"\r\n                    value={input}\r\n                    onChange={e => onInput(e)}\r\n                    labelWidth={60}\r\n                    placeholder=\"输入发音\"\r\n                />\r\n            </FormControl>\r\n        </CardContent>\r\n\r\n        <CardActions>\r\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setShowLatin(true)} >显示latin </Button>\r\n        </CardActions>\r\n    </Card>;\r\n}\r\n\r\n","import React from 'react';\nimport CharCard from './CharCard';\nimport { Button } from '@material-ui/core';\n// import logo from './logo.svg';\n// import './App.css';\n\nfunction App() {\n  let [charSet, setCharSet] = React.useState(null);\n\n  if (charSet == null) {\n    return <div>\n      <Button onClick={() => setCharSet(\"kana\")}>假名</Button>\n      <Button onClick={() => setCharSet(\"hangul\")} >谚文</Button>\n    </div>;\n  }\n\n  return (\n    <div>\n      <CharCard charSet={charSet} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}