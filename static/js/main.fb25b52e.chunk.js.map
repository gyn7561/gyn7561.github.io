{"version":3,"sources":["hangul.js","kana.js","CharCard.js","App.js","serviceWorker.js","index.js"],"names":["Aromanize","require","all","i","push","String","fromCharCode","allChar","romanize","char","kana","forEach","c","length","element","useStyles","makeStyles","theme","root","backgroundColor","palette","background","paper","padding","spacing","fontSize","props","charSet","classes","React","useState","randomChar","setChar","input","setInput","showLatin","setShowLatin","index","parseInt","Math","random","hangul","arr","Hangul","endWithComplexConsonant","onInput","e","value","target","Card","CardContent","Typography","align","className","list","map","renderDetail","FormControl","fullWidth","margin","variant","InputLabel","htmlFor","OutlinedInput","id","onChange","labelWidth","placeholder","CardActions","Button","color","onClick","App","setCharSet","CharCard","Boolean","window","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.fb25b52e.chunk.js","sourcesContent":["\nvar Aromanize = require(\"aromanize\");\n\nlet all = [];\nfor (var i = 0; i < 11172; i++) {\n    all.push(String.fromCharCode(i + 44032));\n}\nfunction romanize(char) {\n    return Aromanize.romanize(char);\n}\nexport default { allChar: all, romanize };","\nvar kana = [\n    [\"tsu\", \"つ\"],\n    [\"TSU\", \"ツ\"],\n    [\"dji\", \"ぢ\"], [\"dzu\", \"づ\"],\n    [\"DJI\", \"ヂ\"], [\"DZU\", \"ヅ\"],\n    [\"kya\", \"きゃ\"], [\"kyu\", \"きゅ\"], [\"kyo\", \"きょ\"],\n    [\"sha\", \"しゃ\"], [\"shu\", \"しゅ\"], [\"sho\", \"しょ\"],\n    [\"cha\", \"ちゃ\"], [\"chu\", \"ちゅ\"], [\"cho\", \"ちょ\"],\n    [\"nya\", \"にゃ\"], [\"nyu\", \"にゅ\"], [\"nyo\", \"にょ\"],\n    [\"hya\", \"ひゃ\"], [\"hyu\", \"ひゅ\"], [\"hyo\", \"ひょ\"],\n    [\"mya\", \"みゃ\"], [\"myu\", \"みゅ\"], [\"myo\", \"みょ\"],\n    [\"rya\", \"りゃ\"], [\"ryu\", \"りゅ\"], [\"ryo\", \"りょ\"],\n    [\"gya\", \"ぎゃ\"], [\"gyu\", \"ぎゅ\"], [\"gyo\", \"ぎょ\"],\n    [\"jya\", \"じゃ\"], [\"jyu\", \"じゅ\"], [\"jyo\", \"じょ\"],\n    [\"dya\", \"ぢゃ\"], [\"dyu\", \"ぢゅ\"], [\"dyo\", \"ぢょ\"],\n    [\"bya\", \"びゃ\"], [\"byu\", \"びゅ\"], [\"byo\", \"びょ\"],\n    [\"pya\", \"ぴゃ\"], [\"pyu\", \"ぴゅ\"], [\"pyo\", \"ぴょ\"],\n    [\"KYA\", \"キャ\"], [\"KYU\", \"キュ\"], [\"KYO\", \"キョ\"],\n    [\"SHA\", \"シャ\"], [\"SHU\", \"シュ\"], [\"SHO\", \"ショ\"],\n    [\"CHA\", \"チャ\"], [\"CHU\", \"チュ\"], [\"CHO\", \"チョ\"],\n    [\"NYA\", \"ニャ\"], [\"NYU\", \"ニュ\"], [\"NYO\", \"ニョ\"],\n    [\"HYA\", \"ヒャ\"], [\"HYU\", \"ヒュ\"], [\"HYO\", \"ヒョ\"],\n    [\"MYA\", \"ミャ\"], [\"MYU\", \"ミュ\"], [\"MYO\", \"ミョ\"],\n    [\"RYA\", \"リャ\"], [\"RYU\", \"リュ\"], [\"RYO\", \"リョ\"],\n    [\"GYA\", \"ギャ\"], [\"GYU\", \"ギュ\"], [\"GYO\", \"ギョ\"],\n    [\"JYA\", \"ジャ\"], [\"JYU\", \"ジュ\"], [\"JYO\", \"ジョ\"],\n    [\"DYA\", \"ヂャ\"], [\"DYU\", \"ヂュ\"], [\"DYO\", \"ヂョ\"],\n    [\"BYA\", \"ビャ\"], [\"BYU\", \"ビュ\"], [\"BYO\", \"ビョ\"],\n    [\"PYA\", \"ピャ\"], [\"PYU\", \"ピュ\"], [\"PYO\", \"ピョ\"],\n    [\"ka\", \"か\"], [\"ki\", \"き\"], [\"ku\", \"く\"], [\"ke\", \"け\"], [\"ko\", \"こ\"],\n    [\"sa\", \"さ\"], [\"shi\", \"し\"], [\"su\", \"す\"], [\"se\", \"せ\"], [\"so\", \"そ\"],\n    [\"ta\", \"た\"], [\"chi\", \"ち\"], [\"te\", \"て\"], [\"to\", \"と\"],\n    [\"na\", \"な\"], [\"ni\", \"に\"], [\"nu\", \"ぬ\"], [\"ne\", \"ね\"], [\"no\", \"の\"],\n    [\"ha\", \"は\"], [\"hi\", \"ひ\"], [\"fu\", \"ふ\"], [\"he\", \"へ\"], [\"ho\", \"ほ\"],\n    [\"ma\", \"ま\"], [\"mi\", \"み\"], [\"mu\", \"む\"], [\"me\", \"め\"], [\"mo\", \"も\"],\n    [\"ra\", \"ら\"], [\"ri\", \"り\"], [\"ru\", \"る\"], [\"re\", \"れ\"], [\"ro\", \"ろ\"],\n    [\"ya\", \"や\"], [\"yu\", \"ゆ\"], [\"yo\", \"よ\"],\n    [\"wa\", \"わ\"], [\"wo\", \"を\"],\n    [\"nn\", \"ん\"],\n    [\"ga\", \"が\"], [\"gi\", \"ぎ\"], [\"gu\", \"ぐ\"], [\"ge\", \"げ\"], [\"go\", \"ご\"],\n    [\"za\", \"ざ\"], [\"ji\", \"じ\"], [\"zu\", \"ず\"], [\"ze\", \"ぜ\"], [\"zo\", \"ぞ\"],\n    [\"da\", \"だ\"], [\"de\", \"で\"], [\"do\", \"ど\"],\n    [\"pa\", \"ぱ\"], [\"pi\", \"ぴ\"], [\"pu\", \"ぷ\"], [\"pe\", \"ぺ\"], [\"po\", \"ぽ\"],\n    [\"ba\", \"ば\"], [\"bi\", \"び\"], [\"bu\", \"ぶ\"], [\"be\", \"べ\"], [\"bo\", \"ぼ\"],\n    [\"KA\", \"カ\"], [\"KI\", \"キ\"], [\"KU\", \"ク\"], [\"KE\", \"ケ\"], [\"KO\", \"コ\"],\n    [\"SA\", \"サ\"], [\"SHI\", \"シ\"], [\"SU\", \"ス\"], [\"SE\", \"セ\"], [\"SO\", \"ソ\"],\n    [\"TA\", \"タ\"], [\"CHI\", \"チ\"], [\"TE\", \"テ\"], [\"TO\", \"ト\"],\n    [\"NA\", \"ナ\"], [\"NI\", \"ニ\"], [\"NU\", \"ヌ\"], [\"NE\", \"ネ\"], [\"NO\", \"ノ\"],\n    [\"HA\", \"ハ\"], [\"HI\", \"ヒ\"], [\"FU\", \"フ\"], [\"HE\", \"ヘ\"], [\"HO\", \"ホ\"],\n    [\"MA\", \"マ\"], [\"MI\", \"ミ\"], [\"MU\", \"ム\"], [\"ME\", \"メ\"], [\"MO\", \"モ\"],\n    [\"RA\", \"ラ\"], [\"RI\", \"リ\"], [\"RU\", \"ル\"], [\"RE\", \"レ\"], [\"RO\", \"ロ\"],\n    [\"YA\", \"ヤ\"], [\"YU\", \"ユ\"], [\"YO\", \"ヨ\"],\n    [\"WA\", \"ワ\"], [\"WO\", \"ヲ\"],\n    [\"NN\", \"ン\"],\n    [\"GA\", \"ガ\"], [\"GI\", \"ギ\"], [\"GU\", \"グ\"], [\"GE\", \"ゲ\"], [\"GO\", \"ゴ\"],\n    [\"ZA\", \"ザ\"], [\"JI\", \"ジ\"], [\"ZU\", \"ズ\"], [\"ZE\", \"ゼ\"], [\"ZO\", \"ゾ\"],\n    [\"DA\", \"ダ\"], [\"DE\", \"デ\"], [\"DO\", \"ド\"],\n    [\"PA\", \"パ\"], [\"PI\", \"ピ\"], [\"PU\", \"プ\"], [\"PE\", \"ペ\"], [\"PO\", \"ポ\"],\n    [\"BA\", \"バ\"], [\"BI\", \"ビ\"], [\"BU\", \"ブ\"], [\"BE\", \"ベ\"], [\"BO\", \"ボ\"],\n    [\"kk\", \"っ\"], [\"ss\", \"っ\"], [\"tt\", \"っ\"], [\"pp\", \"っ\"],\n    [\"KK\", \"ッ\"], [\"SS\", \"ッ\"], [\"TT\", \"ッ\"], [\"PP\", \"ッ\"],\n    [\"a\", \"あ\"], [\"i\", \"い\"], [\"u\", \"う\"], [\"e\", \"え\"], [\"o\", \"お\"],\n    [\"A\", \"ア\"], [\"I\", \"イ\"], [\"U\", \"ウ\"], [\"E\", \"エ\"], [\"O\", \"オ\"]\n];\n\n\nlet allChar = [];\n\nkana.forEach(c => {\n    allChar.push(c[1]);\n});\n\nfunction romanize(char) {\n    for (let i = 0; i < kana.length; i++) {\n        const element = kana[i];\n        if (element[1] === char) {\n            return element[0];\n        }\n    }\n}\n\n\nexport default { allChar, romanize };","import React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Card from '@material-ui/core/Card';\nimport CardActions from '@material-ui/core/CardActions';\nimport CardContent from '@material-ui/core/CardContent';\nimport Button from '@material-ui/core/Button';\nimport Typography from '@material-ui/core/Typography';\nimport { FormControl, InputLabel, OutlinedInput } from \"@material-ui/core\";\nimport hangul from \"./hangul\";\nimport kana from \"./kana\";\nimport * as Hangul from 'hangul-js';\n\nconst useStyles = makeStyles(theme => ({\n    root: {\n        backgroundColor: theme.palette.background.paper,\n        padding: theme.spacing(1),\n        fontSize: 70\n    },\n}));\n\n\nexport default function (props) {\n    let { charSet } = props;\n    const classes = useStyles();\n    const [char, setChar] = React.useState(randomChar());\n    const [input, setInput] = React.useState(\"\");\n    const [showLatin, setShowLatin] = React.useState(false);\n\n    function randomChar() {\n        if (charSet === \"hangul\") {\n            let index = parseInt(Math.random() * hangul.allChar.length);\n            let char = hangul.allChar[index];\n            function endWithComplexConsonant() {\n                let arr = [\"ㄳ\", \"ㄵ\", \"ㄶ\", \"ㄺ\", \"ㄻ\", \"ㄼ\", \"ㄽ\", \"ㄾ\", \"ㄿ\", \"ㅀ\", \"ㅄ\"];\n                for (let i = 0; i < arr.length; i++) {\n                    const element = arr[i];\n                    if (Hangul.search(char, element) !== -1) {\n                        return true;\n                    }\n                }\n                return false;\n            }\n            if (endWithComplexConsonant()) {\n                if (Math.random() < 0.1) {\n                    return char;\n                } else {\n                    return randomChar();\n                }\n            }\n            return char;\n        } else if (charSet == \"kana\") {\n            let index = parseInt(Math.random() * kana.allChar.length);\n            return kana.allChar[index];\n        }\n    }\n\n    function romanize(char) {\n        if (charSet == \"hangul\") {\n            return hangul.romanize(char);\n        } else if (charSet == \"kana\") {\n            return kana.romanize(char);\n        }\n    }\n\n    function init() {\n        setInput(\"\");\n        setChar(randomChar());\n        setShowLatin(false);\n    }\n\n    function onInput(e) {\n        let value = e.target.value;\n        setInput(value);\n        if (romanize(char) === value) {\n            init();\n        }\n    }\n\n    function renderDetail() {\n        if (charSet === 'hangul') {\n            let list = Hangul.disassemble(char);\n            return <div>{list.map(c => <span>{c}</span>)}</div>\n        }\n    }\n\n    return <Card>\n        <CardContent>\n            <Typography align=\"center\" className={classes.root}>\n                {char}\n                {showLatin && <span>-{romanize(char)}\n                    {showLatin && renderDetail()}\n                </span>}\n                {/*- {Aromanize.romanize(char)} */}\n            </Typography>\n            <FormControl fullWidth className={classes.margin} variant=\"outlined\">\n                <InputLabel htmlFor=\"outlined-adornment-amount\">输入发音</InputLabel>\n                <OutlinedInput\n                    id=\"outlined-adornment-amount\"\n                    value={input}\n                    onChange={e => onInput(e)}\n                    labelWidth={60}\n                    placeholder=\"输入发音\"\n                />\n            </FormControl>\n        </CardContent>\n\n        <CardActions>\n            <Button variant=\"contained\" color=\"primary\" onClick={() => setShowLatin(true)} >显示latin </Button>\n        </CardActions>\n    </Card>;\n}\n\n","import React from 'react';\nimport CharCard from './CharCard';\nimport { Button } from '@material-ui/core';\n// import logo from './logo.svg';\n// import './App.css';\n\nfunction App() {\n  let [charSet, setCharSet] = React.useState(null);\n\n  if (charSet == null) {\n    return <div>\n      <Button onClick={() => setCharSet(\"kana\")}>假名</Button>\n      <Button onClick={() => setCharSet(\"hangul\")} >谚文</Button>\n    </div>;\n  }\n\n  return (\n    <div>\n      <CharCard charSet={charSet} />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}